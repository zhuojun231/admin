<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jingluu.admin.auth.dao.AuthUserMapper">
    <resultMap id="BaseResultMap" type="com.jingluu.admin.auth.entity.AuthUser">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="nickname" jdbcType="VARCHAR" property="nickname"/>
        <result column="enabled" jdbcType="INTEGER" property="enabled"/>
        <result column="created_time" jdbcType="TIMESTAMP" property="createdTime"/>
        <result column="last_update_time" jdbcType="TIMESTAMP" property="lastUpdateTime"/>
        <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime"/>
    </resultMap>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from auth_user
    where id = #{id,jdbcType=BIGINT}
  </delete>

    <insert id="insert" parameterType="com.jingluu.admin.auth.entity.AuthUser">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into auth_user (username, `password`, nickname,
        enabled, created_time, last_update_time,
        last_login_time)
        values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR},
        #{enabled,jdbcType=INTEGER}, #{createdTime,jdbcType=TIMESTAMP}, #{lastUpdateTime,jdbcType=TIMESTAMP},
        #{lastLoginTime,jdbcType=TIMESTAMP})
    </insert>

    <update id="updateByPrimaryKey" parameterType="com.jingluu.admin.auth.entity.AuthUser">
        update auth_user
        <set>
            <if test="password != null">
                `password` = #{password,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null">
                nickname = #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="enabled != null">
                enabled = #{enabled,jdbcType=INTEGER},
            </if>
            <if test="lastUpdateTime != null">
                last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastLoginTime != null">
                last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, username, `password`, nickname, enabled, created_time, last_update_time, 
    last_login_time
    from auth_user
    where id = #{id,jdbcType=BIGINT}
  </select>

    <select id="selectAll" resultMap="BaseResultMap">
    select id, username, `password`, nickname, enabled, created_time, last_update_time, 
    last_login_time
    from auth_user
  </select>

    <select id="count" resultType="int">
        select count(1)
        from auth_user
        <where>
            <if test="username != null">
                and username = #{username}
            </if>
            <if test="password != null">
                and password = #{password}
            </if>
            <if test="enabled != null">
                and enabled = #{enabled}
            </if>
            <if test="nickname != null">
                and nickname = #{nickname}
            </if>
        </where>
    </select>

    <select id="selectList" resultMap="BaseResultMap">
        select id, username, `password`, nickname, enabled, created_time, last_update_time,
        last_login_time
        from auth_user
        <where>
            <if test="user.username != null">
                and username = #{user.username}
            </if>
            <if test="user.password != null">
                and password = #{user.password}
            </if>
            <if test="user.enabled != null">
                and enabled = #{user.enabled}
            </if>
            <if test="user.nickname != null">
                and nickname = #{user.nickname}
            </if>
        </where>
        <if test="offset != null and size != null">
            limit #{offset},#{size}
        </if>
    </select>
</mapper>